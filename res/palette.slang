// https://bottosson.github.io/posts/oklab/

// Oklab color space value.
struct Lab {
    double L;
    double a;
    double b;
};

// These values are generated by oklab_computer.v
static const Lab color_palette[255] = {
// [0, 0, 0]
{ 0, 0, 0 },
// [34, 32, 35]
{ 0.5047371188321741, 0.005374749607376772, -0.005381261191504949 },
// [69, 40, 60]
{ 0.57795494435267, 0.0473684181013137, -0.020577347899438103 },
// [102, 57, 49]
{ 0.6425223709321064, 0.04280473015231773, 0.027571189065298374 },
// [143, 86, 59]
{ 0.7268088725264669, 0.035690871481349196, 0.04760749163288147 },
// [223, 113, 38]
{ 0.8064982567632945, 0.04259727175523348, 0.10552707116270155 },
// [217, 160, 102]
{ 0.871922798989933, 0.017250910790505003, 0.0577787407818956 },
// [238, 195, 154]
{ 0.9254070400352287, 0.013174422858083401, 0.03530301628038568 },
// [251, 242, 54]
{ 0.9616359125894534, -0.04253849402525972, 0.13806928673657903 },
// [153, 229, 80]
{ 0.9156279914505941, -0.07629331053296146, 0.09821680763942642 },
// [106, 190, 48]
{ 0.8477394392083614, -0.09356594370295995, 0.10942877360911207 },
// [55, 148, 110]
{ 0.7792068525900835, -0.08036981447860647, 0.013667487924248545 },
// [75, 105, 47]
{ 0.7117601454404474, -0.04857521646074908, 0.06149952622403232 },
// [82, 75, 36]
{ 0.6594760206714706, -0.011288491246441601, 0.05845641872132534 },
// [50, 60, 57]
{ 0.6074969685813897, -0.013467202137605327, 0.000778318653233967 },
// [63, 63, 116]
{ 0.6435366679941141, 0.01613416818696234, -0.06267736176004679 },
// [48, 96, 130]
{ 0.6984374599317584, -0.036735777244805756, -0.04729084592737354 },
// [91, 110, 225]
{ 0.7688639762724334, 0.007413667589952433, -0.09558842948371138 },
// [99, 155, 255]
{ 0.8379111150505655, -0.019614936220701873, -0.07912216909273906 },
// [95, 205, 228]
{ 0.8886975098427689, -0.0603821684619501, -0.03321545619985411 },
// [203, 219, 252]
{ 0.9490975737400481, -0.0023853128013680003, -0.022043394835692842 },
// [255, 255, 255]
{ 0.9999999934735462, 8.095285553011422e-11, 3.727390762708893e-08 },
// [155, 173, 183]
{ 0.8724615198495569, -0.008551597356432628, -0.010349281835333124 },
// [132, 126, 135]
{ 0.7954991772718376, 0.006502669480762668, -0.006517801745230534 },
// [105, 106, 106]
{ 0.7457165562015389, -0.0008009075980714986, -0.000246976246726871 },
// [89, 86, 82]
{ 0.6971187224846254, 0.0013643317945077893, 0.005470273573169093 },
// [118, 66, 138]
{ 0.6959487355343671, 0.06796798916056934, -0.06125126426710725 },
// [172, 50, 50]
{ 0.6814385625448683, 0.1074055835502819, 0.04013209032584897 },
// [217, 87, 99]
{ 0.7798509008452427, 0.09370974983583191, 0.01940339770674615 },
// [215, 123, 186]
{ 0.842023715448285, 0.07066720710619362, -0.030406686958097784 },
// [143, 151, 74]
{ 0.8222894889915049, -0.027784464472867976, 0.06851569391191548 },
// [138, 111, 48]
{ 0.7600627346484458, -0.0030851552879334054, 0.0768018099106007 }, 
};

// https://bottosson.github.io/posts/oklab/#converting-from-linear-srgb-to-oklab
float3 oklab_to_linear_srgb(Lab c) {
    double l_ = c.L + 0.3963377774f * c.a + 0.2158037573f * c.b;
    double m_ = c.L - 0.1055613458f * c.a - 0.0638541728f * c.b;
    double s_ = c.L - 0.0894841775f * c.a - 1.2914855480f * c.b;

    double l = l_*l_*l_;
    double m = m_*m_*m_;
    double s = s_*s_*s_;
	min32float ma = 0;

    return {
		+4.0767416621f * l - 3.3077115913f * m + 0.2309699292f * s,
		-1.2684380046f * l + 2.6097574011f * m - 0.3413193965f * s,
		-0.0041960863f * l - 0.7034186147f * m + 1.7076147010f * s,
    };
}

// https://www.shadertoy.com/view/wts3RX
float cbrt(float x) {
    float y = sign(x) * (float)abs(x) / 3u + 0x2a514067u;

    int newton_iter = 2;
    for(int i = 0; i < newton_iter; i++) {
        y = (2.0f * y + x / (y * y)) * 0.333333333f;
    }

    int halley_iter = 1;
    for(int i = 0; i < halley_iter; i++) {
    	float y3 = y * y * y;
        y *= (y3 + 2.0f * x) / (2.0f * y3 + x);
    }
    
    return y;
}

Lab linear_srgb_to_oklab(uint3 c) {
    float l = 0.4122214708f * c.r + 0.5363325363f * c.g + 0.0514459929f * c.b;
	float m = 0.2119034982f * c.r + 0.6806995451f * c.g + 0.1073969566f * c.b;
	float s = 0.0883024619f * c.r + 0.2817188376f * c.g + 0.6299787005f * c.b;

    float l_ = cbrt(l);
    float m_ = cbrt(m);
    float s_ = cbrt(s);

    return {
        0.2104542553f*l_ + 0.7936177850f*m_ - 0.0040720468f*s_,
        1.9779984951f*l_ - 2.4285922050f*m_ + 0.4505937099f*s_,
        0.0259040371f*l_ + 0.7827717662f*m_ - 0.8086757660f*s_,
    };
}
